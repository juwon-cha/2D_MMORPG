// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct C_SKILL : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_12_23(); }
  public static C_SKILL GetRootAsC_SKILL(ByteBuffer _bb) { return GetRootAsC_SKILL(_bb, new C_SKILL()); }
  public static C_SKILL GetRootAsC_SKILL(ByteBuffer _bb, C_SKILL obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public C_SKILL __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public SkillInfo? SkillInfo { get { int o = __p.__offset(4); return o != 0 ? (SkillInfo?)(new SkillInfo()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<C_SKILL> CreateC_SKILL(FlatBufferBuilder builder,
      Offset<SkillInfo> skillInfoOffset = default(Offset<SkillInfo>)) {
    builder.StartTable(1);
    C_SKILL.AddSkillInfo(builder, skillInfoOffset);
    return C_SKILL.EndC_SKILL(builder);
  }

  public static void StartC_SKILL(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddSkillInfo(FlatBufferBuilder builder, Offset<SkillInfo> skillInfoOffset) { builder.AddOffset(0, skillInfoOffset.Value, 0); }
  public static Offset<C_SKILL> EndC_SKILL(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<C_SKILL>(o);
  }
}


static public class C_SKILLVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyTable(tablePos, 4 /*SkillInfo*/, SkillInfoVerify.Verify, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
